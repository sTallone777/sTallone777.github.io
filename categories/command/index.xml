<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>command on Ranbo</title>
    <link>https://stallone777.github.io/categories/command/</link>
    <description>Recent content in command on Ranbo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Jan 2022 11:51:38 +0900</lastBuildDate><atom:link href="https://stallone777.github.io/categories/command/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ffmpeg视频转换命令</title>
      <link>https://stallone777.github.io/post/media/ffmpeg/</link>
      <pubDate>Sat, 08 Jan 2022 11:51:38 +0900</pubDate>
      
      <guid>https://stallone777.github.io/post/media/ffmpeg/</guid>
      <description>MKV转MP4 1  ffmpeg -i input.mkv -c:v copy -c:a copy output.mp4   压缩视频 1  ffmpeg -i input.mp4 -b:v 1500k output.mp4   截取视频 1 2 3 4 5 6 7  ffmpeg -ss 00:30:00 -to 01:45:10 -i video.mp4 -c copy cut.mp4 # -ss 时间：从哪个时间点开始 # video.mp4 ：是路径下的视频，例如C:\video.mp4 # -to 时间：从哪个时间点结束 # -c：是视音频的格式 # copy：是指输出视频直接copy输入视频 # cut.mp4:指输出视频的地址，例如：C:\cut.mp4   合并视频 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  # 方法一： # 先将mp4转化为同样编码形式的ts流，因为ts流是可以concate的， # 所以先把mp4封装成ts然后concate ts流，最后再把ts流转化为mp4。 ffmpeg -i 1.</description>
    </item>
    
    <item>
      <title>一些版本管理工具</title>
      <link>https://stallone777.github.io/post/others/version_control_tool/</link>
      <pubDate>Thu, 06 Jan 2022 10:55:12 +0900</pubDate>
      
      <guid>https://stallone777.github.io/post/others/version_control_tool/</guid>
      <description>版本管理工具介绍  flutter：fvm golang：g download nodejs：nvm download  fvm 1.下载dart dart download
下载后将dart的bin目录添加到path
2.通过dart安装fvm pub global activate fvm
3.修改系统环境变量，添加fvm的缓存目录 1 2 3 4  # 变量名： FVM_HOME # 变量值： D:\fvm   4.fmv常用命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  # 查看可用版本 fvm releases # 安装flutter fvm install &amp;lt;版本&amp;gt; # 查看当前安装了哪些版本 fvm list # 查看当前版本 fvm current # 设置默认版本 # 此命令需要管理员权限 # 此命令需要在flutter项目路径下使用，使用后会在项目路径下生成一个[.</description>
    </item>
    
    <item>
      <title>Rust 常用命令</title>
      <link>https://stallone777.github.io/post/rust/rust1/</link>
      <pubDate>Thu, 06 Jan 2022 09:42:11 +0900</pubDate>
      
      <guid>https://stallone777.github.io/post/rust/rust1/</guid>
      <description>rust 安装 本版管理工具rustup安装
rustup 相关命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  // 可以查看当前已经安装的toolchain信息 rustupshow// 安装指定toolchain // rustup toolchain install &amp;lt;toolchain&amp;gt; // rustup toolchain uninstall &amp;lt;toolchain&amp;gt; rustuptoolchaininstallnightly-2020-03-19// 安装组件 // rustup component add &amp;lt;component&amp;gt; // rustup component remove &amp;lt;component&amp;gt; rustupcomponentaddrust-src// 切换toolchain(设置默认toolchain) // rustup default &amp;lt;toolchain&amp;gt; rustupdefaultnightly-2020-03-19-x86_64-pc-windows-msvc  每个版本的 rust toolchain 分为三个channel nightly, beta 和 stable
 nightly：激进版，有许多不稳定的新功能。 beta：测试版。 stable：稳定版，相对nightly版会保守很多。  rust 相关命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  //========= Cargo ============== //可选参数： --b --lib -p //创建新项目： cargonew//编译： cargobuild//运行： cargorun//更新项目依赖： cargoupdate//执行测试： cargotest//生成文档： cargodoc//静态检查： cargocheck//========= rustc ============== //运行.</description>
    </item>
    
    <item>
      <title>用vscode写c&#43;&#43;</title>
      <link>https://stallone777.github.io/post/cpp/cpp_vscode/</link>
      <pubDate>Wed, 05 Jan 2022 23:08:00 +0900</pubDate>
      
      <guid>https://stallone777.github.io/post/cpp/cpp_vscode/</guid>
      <description>关于用vscode进行c++开发的配置 1.在vscode中安装[cpptools]插件 ※Offline installation packages:
vscode-cpptools
2.安装 MinGW MinGW download
※Download the latest release of [x86_64-posix-seh] and unzip to C:\Program Files\mingw64
3.配置系统环境变量 Add to path C:\Program Files\mingw64\bin\
校验命令: 在CMD中输入 g++ 如果输出：&amp;gt; g++: fatal error: no input files. 则表明配置成功。
4.配置 vscode config files</description>
    </item>
    
    <item>
      <title>Linux Command Summary</title>
      <link>https://stallone777.github.io/post/server/linux/ubuntu/</link>
      <pubDate>Wed, 06 Jan 2021 14:21:18 +0900</pubDate>
      
      <guid>https://stallone777.github.io/post/server/linux/ubuntu/</guid>
      <description>&lt;p&gt;The summary about linux common command.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>React&#43;Webpack Scaffold</title>
      <link>https://stallone777.github.io/post/nodejs/react/start-react/</link>
      <pubDate>Mon, 28 Dec 2020 17:36:14 +0900</pubDate>
      
      <guid>https://stallone777.github.io/post/nodejs/react/start-react/</guid>
      <description>&lt;h1 id=&#34;create-the-reactwebpack-scaffold&#34;&gt;Create the react+webpack scaffold.&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>Manjaro Summary</title>
      <link>https://stallone777.github.io/post/server/linux/manjaro/</link>
      <pubDate>Mon, 28 Dec 2020 08:12:12 +0900</pubDate>
      
      <guid>https://stallone777.github.io/post/server/linux/manjaro/</guid>
      <description>&lt;p&gt;Summary about Manjaro&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use EF In DotNet Core</title>
      <link>https://stallone777.github.io/post/csharp/mvc-ef/</link>
      <pubDate>Tue, 22 Dec 2020 21:56:58 +0900</pubDate>
      
      <guid>https://stallone777.github.io/post/csharp/mvc-ef/</guid>
      <description>&lt;p&gt;How to create ef in .net core.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SSL Command</title>
      <link>https://stallone777.github.io/post/ssl/ssl-command/</link>
      <pubDate>Mon, 07 Dec 2020 15:23:53 +0900</pubDate>
      
      <guid>https://stallone777.github.io/post/ssl/ssl-command/</guid>
      <description>&lt;p&gt;Common command of SSL &amp;amp; TLS&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flutter Command</title>
      <link>https://stallone777.github.io/post/flutter/flutter-command/</link>
      <pubDate>Mon, 07 Dec 2020 12:00:41 +0900</pubDate>
      
      <guid>https://stallone777.github.io/post/flutter/flutter-command/</guid>
      <description>&lt;p&gt;Configration about flutter.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker Command</title>
      <link>https://stallone777.github.io/post/docker/docker-command/</link>
      <pubDate>Sat, 05 Dec 2020 22:02:10 +0900</pubDate>
      
      <guid>https://stallone777.github.io/post/docker/docker-command/</guid>
      <description>&lt;p&gt;Common docker command.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git Command</title>
      <link>https://stallone777.github.io/post/git/git-command/</link>
      <pubDate>Sat, 05 Dec 2020 11:53:10 +0900</pubDate>
      
      <guid>https://stallone777.github.io/post/git/git-command/</guid>
      <description>&lt;p&gt;Common command of git.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go Install</title>
      <link>https://stallone777.github.io/post/go/go-install/</link>
      <pubDate>Tue, 01 Dec 2020 22:20:08 +0900</pubDate>
      
      <guid>https://stallone777.github.io/post/go/go-install/</guid>
      <description>&lt;p&gt;Configuration of golang.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
